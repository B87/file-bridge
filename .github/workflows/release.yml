name: Release

on:
    release:
        types: [created]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [windows, linux, darwin]
        goarch: [amd64]
    steps:
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '^1.21'

    - name: Check out code
      uses: actions/checkout@v3

    - name: Build
      run: |
        env GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -v -o fileb-${{ matrix.goos }}-${{ matrix.goarch }}
    
    - name: Get Release Version
      id: get-version
      uses: actions/github-script@v5
      with:
        script: |
          const tagName = context.payload.release.tag_name;
          core.setOutput('version', version);

    - name: Upload Artifact to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./fileb-${{ steps.get-version.outputs.version }}-${{ matrix.goos }}-${{ matrix.goarch }}
        asset_name: fileb-${{ steps.get-version.outputs.version }}-${{ matrix.goos }}-${{ matrix.goarch }}
        asset_content_type: application/octet-stream

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and publish Docker image
      run: |
          IMAGE_NAME=ghcr.io/${{ github.repository }}/file-bridge:${{ steps.get-version.outputs.version }}
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME